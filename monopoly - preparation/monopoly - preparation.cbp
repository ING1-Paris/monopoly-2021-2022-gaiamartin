<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="monopoly - preparation" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/monopoly - preparation" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/monopoly - preparation" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
		</Compiler>
		<Unit filename="CASE1 - nouvelle partie.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="CASE4 - regles du jeu.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="MENU.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="bibli_Monopoly.h" />
		<Unit filename="blindage noms.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="cartes.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="dÃ©s.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="effacerCoteDroit.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="goto.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="grille.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="jeu.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="main.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="optionsCases.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="premierTour.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="prison.c">
			<Option compilerVar="CC" />
		</Unit>
		<Extensions />
	</Project>
</CodeBlocks_project_file>
