

void menuJoueur(){
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);

    SetConsoleTextAttribute(hConsole,15);
    printf("\n=====| Menu Joueur |=====\n"
           "que souhaitez vous faire ?\n"
           "1/ Lancer les des\n"
           "2/ Acheter une propriete\n"
           "3/ Acheter une maison\n"
           "4/ Acheter un hotel\n"
           "5/ Hypothequer une propriete\n"
           "6/ Vendre des biens\n"
           "7/ Menu Principal\n"
           "=========================\n>");
    SetConsoleTextAttribute(hConsole,15);
}

//acheter propriété

int main() 
{
   if ((j[k].argent) >= (p[j[k].position].prix))            //On verifie que le joueur a l'argent nécéssaire pour acheter la propriété
    {
        j[k].argent -= p[j[k].position].prix;
        strcpy(p[j[k].position].proprio, j[k].nom);
        printf("Transaction effectuee !\n");
        printf("%s possede desormais %s\n", j[k].nom, p[j[k].position].nom);
    }
    else
    {
            printf("Vous n'avez pas assez d'argent pour effectuer cette transaction !\n");
            return 0;
    }
    return 0;
}


//hypothequer
void hypothequer(//joueur ){
char choix;
printf("Quelle propriete souhaitez vous hyphotequer ? Taper q pour quitter/n");
choix = getchar();
int propH=0;
int i=0;
if (choix='q'){
    return;
}
    for (i=0; i<28; i++){
        if (p[i].nom=choix){                //On verifie que la saisi corresponde a une propriété
        i=propH;
        }
    else{
        printf("Cette propriete n existe pas, veuillez ressayer/n");
    }
    
}
if (p[propH].proprio!=//joueur){
    printf("Cette propriete ne vous appartient pas !/n");
}
else if (p[propH].hypo=true){
    printf("Cette propriete est deja hypothequer !/n");
}
else if (p[propH].nbMaison!=0){
    printf("IMPOSSIBLE, enlevez les maisons pour hypothequer !/n");
}
else{
    p[propH.hypo=true];
    printf("La propriete %s est hypothequee, vous revevez %s!/n", p[propH].nom, p[propH].hypotheque);
    //joueur[].argent=+p[propH].hypotheque;
}


}



//deshypothéquer

void deshypothequer(//joueur ){
char choix;
printf("Quelle propriete souhaitez vous deshyphotequer ? Taper q pour quitter/n");
choix = getchar();
int propH=0;
int prix;
if (choix='q'){
    return;
}
while(propH=0){
    for (i=0; i<28; i++){
        if (choix[i].nom=choix){
        i=propH;
        }
    else{
        printf("Cette propriete n existe pas, veuillez ressayer/n");
    }
    }
}
if (p[propH].proprio!=//joueur){
    printf("Cette propriete ne vous appartient pas !/n");
}
else if (p[propH].hypo=false){
    printf("Cette propriete n'est pas hypothequer !/n");
}

}
prix=p[propH].hypotheque*1,1;
else{
    p[propH.hypo=false];
    printf("La propriete %s est deshypothequee, vous payez %s/n", p[propH].nom, prix);
    //joueur[].argent=-prix;
}


}


//PAYER LOYER
void payerLoyer(int nbJoueurs, j[i] ){
{
    for (int k=0; k<nbJoueurs; k++){
        if(p[k].nom=p[j[i].position].proprio){
            
                if(j[k].nom!=j[i].nom){
                    switch(p[j[i].position].nbMaison){
                    case 0:
                            j[i].argent=-p[j[i].position].loyer0M;
                            j[k].argent=+p[j[i].position].loyer0M;
                            break;
                    }
                    case 1:
                            j[i].argent=-p[j[i].position].loyer1M;
                            j[k].argent=+p[j[i].position].loyer1M;
                            break;
                    }
                    case 2:
                            j[i].argent=-p[j[i].position].loyer2M;
                            j[k].argent=+p[j[i].position].loyer2M;
                            break;
                    }
                    case 3:
                            j[i].argent=-p[j[i].position].loyer3M;
                            j[k].argent=+p[j[i].position].loyer3M;
                            break;
                    }
                    case 4:
                            j[i].argent=-p[j[i].position].loyer4M;
                            j[k].argent=+p[j[i].position].loyer4M;
                            break;
                    }
                    case 5:
                            j[i].argent=-p[j[i].position].loyer5M;
                            j[k].argent=+p[j[i].position].loyer5M;
                            break;
                    }
                }
        }
    }
}
}
